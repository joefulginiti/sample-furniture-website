body {
  font-family: 'Poppins', sans-serif;
}

/* Grid CSS */

  /* Add the following properties to define the overall size of the grid:
      margin: 0px 5%;
      display: grid;
      min-height: 500px;
      height: 70vh;
    Create the structure of the CSS Grid:
      grid-template-rows: 75% 25%;
      grid-template-columns: 75% 25%;
    Add template are:
      grid-template-areas:
        "featuredProduct secondaryProduct"
        "featuredProduct CTA";
  */
#heroGrid {
  margin: 0px 5%;
  display: grid;
  min-height: 500px;
  height: 70vh;
  grid-template-rows: 75% 25%;
  grid-template-columns: 75% 25%;
  grid-template-areas:
    "featuredProduct secondaryProduct"
    "featuredProduct CTA";
}

#featuredProduct {
    grid-area: featuredProduct;
    background-image: url("../images/furniture1.png");
}

#secondaryProduct {
  grid-area: secondaryProduct;
  background-image: url("../images/furniture2.png");

}

#CTA {
  grid-area: CTA;
  background-image: url("../images/woodbg.png");
  justify-content: space-around;
  cursor: pointer;
}
/* Create CSS selector that targets 
  featuredProduct ID (line27 index.html)
  define the value for the grid-area property
  add background image "../images/furniture1.png"
      grid-area: featuredProduct;
      background-image: url("../images/furniture1.png");
*/



/* Create CSS selector that targets 
  secondaryProduct ID (line34 index.html)
  define the value for the grid-area property
  add background image "../images/furniture2.png"
    grid-area: secondaryProduct;
    background-image: url("../images/furniture2.png");
*/


/* Create CSS selector that targets 
  CTA ID (line35 index.html)
  define the value for the grid-area property
  add background image "../images/woodbg.png"
    grid-area: CTA;
    background-image: url("../images/woodbg.png");
  Add the following properties as well:
    justify-content: space-around;
    cursor: pointer;
*/


.heroGridArea {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  align-items: center;
  display: flex;
  position: relative;
}

#headline {
  border-bottom: 5px solid #FF6200;
  background-color: rgba(255,255,255,0.8);
  position: absolute;
  right: -50px;
  top: 100px;
  padding: 25px;
  z-index: 100;
}
/* Create a CSS selector that targets 
  the heroGridArea class and add the following CSS properties:
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    align-items: center;
    display: flex;
    position: relative;
 */

 
 /* Create a CSS selector that targets
  headline ID (line 28 index.html)
    add following CSS properties:
      border-bottom: 5px solid #FF6200;
      background-color: rgba(255,255,255,0.8);
      position: absolute;
      right: -50px;
      top: 100px;
      padding: 25px;
      z-index: 100;
 */





/* STOP END OF ACTIVITY 1 */
/* Activity 2 starts here */
/* Category Grid CSS */

/* Create a selector that targets the subHeading class. 
Add the following:
  text-align: center;
  border-bottom: 2px solid black;
  width: 300px;
  margin: 50px auto;
*/

.subHeading {
  text-align: center;
  border-bottom: 2px solid black;
  width: 300px;
  margin: 50px auto;
}

#categoryGrid {
  margin: 0px 5%;
  display: grid;
  grid-template-rows: 300px 300px 300px;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-areas: 
      "bookcases bedroom couches"
      "patio patio couches"
      "desks desks desks";
}

/* Create a selector that targets second grid using its ID. 
  Add the following:
    margin: 0px 5%;
    display: grid;
  Use the grid-template-rows, grid-template-columns, and grid-template-areas 
  properties to create the structure of the grid.
    grid-template-rows: 300px 300px 300px;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas:
      "bookcases bedroom patio"
      "couches couches patio"
      "desks desks desks"
    ;
*/

#bookcases {
  grid-area: bookcases;
  background-image: url("../images/bookcases@2x.png")
}

/* Create CSS selector that targets 
  bookcases ID
  define the value for the grid-area property
  add background image "../images/bookcases@2x.png"
      grid-area: bookcases;
      background-image: url("../images/bookcases@2x.png");
*/

#bedroom {
  grid-area: bedroom;
  background-image: url("../images/beds@2x.png");
}

/* Create CSS selector that targets 
  bedroom ID
  define the value for the grid-area property
  add background image "../images/beds@2x.png"
      grid-area: bedroom;
      background-image: url("../images/beds@2x.png");
*/

#couches {
  grid-area: couches;
  background-image: url("../images/couch@2x.png");
}

/* Create CSS selector that targets 
  couches ID
  define the value for the grid-area property
  add background image "../images/couch@2x.png"
      grid-area: couches;
      background-image: url("../images/couch@2x.png");
*/

#patio {
  grid-area: patio;
  background-image: url("../images/patio@2x.png");
}

/* Create CSS selector that targets 
  patio ID
  define the value for the grid-area property
  add background image "../images/patio@2x.png"
      grid-area: patio;
      background-image: url("../images/patio@2x.png");
*/

#desks {
  grid-area: desks;
  background-image: url("../images/desks@2x.png")
}

/* Create CSS selector that targets 
  desks ID
  define the value for the grid-area property
  add background image "../images/desks@2x.png"
      grid-area: desks;
      background-image: url("../images/desks@2x.png");
*/

.categoryGridArea {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  margin: 5px;
  cursor: pointer;
  display: grid;
  align-content: end;
}


/* Create a selector for the common grid area 
  class categoryGridArea.
  Add the following properties and values to this selector:
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    margin: 5px;
    cursor: pointer;
    display: grid;
    align-content: end;
*/

.heading {
  background-color: rgba(0,0,0,0.7);
  padding: 15px;
  height: 25px;
  color: white;
  font-size: 18px;
  border-bottom: 5px solid #ff6200;
}


/* Create a selector for the heading class 
  Add the following properties and values to this selector:
    background-color: rgba(0,0,0,0.7);
    padding: 15px;
    height: 25px;
    color: white;
    font-size: 18px;
    border-bottom: 5px solid #FF6200;
*/





/* STOP END OF ACTIVITY 2 */
/* Navigation CSS */
/* CHECK OUT THIS CODE BELOW IF YOU WANT TO GET A REFRESHER ON FLEX */
#navBar {
  display: flex;
  flex-direction: row;
  margin: 0px 5%;
}
#navBar h1 {
  width: 25%;
  font-weight: 500;
}
#navigation {
  display: flex;
  width: 50%;
  align-items: center;
  justify-content: space-evenly;
}
#navigation p {
  cursor: pointer;
  text-decoration: none;
}
.icons {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 25%;
}
.icons img {
  margin: 15px;
  cursor: pointer;
}
.highlight {
  color: #FF6200;
  font-weight: 700;
}

/* Typography CSS */

h2 {
  font-size: 60px;
  margin: 0px 0px;
  color: #FF6200;
}

h3 {
  font-size: 32px;
  font-weight: 300;
  margin: 0px 0px;
}

h4 {
  color: white;
  font-weight: 400;
  font-size: 22px;
}


#headline p {
  max-width: 350px;
  font-size: 16px;
  font-weight: 300;
  margin: 0px 0px;
  color: #636364;
}



/* Activity 3 Starts here */

/* Write a media query that targets
   a screensize with the max-width of 1000px
    @media only screen and (max-width: 1000px) {
     
    }

  In your newly written media query, write a CSS selector that 
  targets the id of navigation
    give it the property display with a value of none
  Write a CSS selector that targets the class of icons
    give it the property margin-left with a value of auto.
 */

@media only screen and (max-width: 1000px) {
  #navigation {
    display: none;
  }
  #icons {
    margin-left: auto;
  }

}

@media only screen and (max-width: 600px) {
  #headline {
    position: static;
    margin: 20px;
  }
  #heroGrid {
    grid-template-areas: 
    "featuredProduct featured Product"
    "secondaryProduct CTA";
  }  
  #categoryGrid {
    grid-template-rows: 300px 300px 300px 300px 300px;
    grid-template-columns: 1fr;
    grid-template-areas: 
      "bookcases"
      "bedroom"
      "patio"
      "couches"
      "desks";
  }
}





/* Adjust the below media query to max-width of 600px */
 @media only screen and (max-width: 100px) {
  /*Write a CSS selector that targets the id of headline  
    Give your selector the CSS property of position with a value of static.
    Give your selector the CSS property of margin with a value of 20px.
  */


  /* Write a CSS selector that targets the id of heroGrid: 
      Give your CSS selector the CSS property of grid-template-areas.
      Rewrite the template areas so they display as follows:
        “featuredProduct featuredProduct”
        “secondaryProduct CTA”
    This will cause our grid to restructure and display better on mobile devices.
   */



  /* Write a CSS selector that targets the id of categoryGrid: 
      Give your CSS selector the property of grid-template-rows 
        with a value of 300px 300px 300px 300px 300px
      Give your CSS selector the property of grid-template-columns 
        with a value of 1fr
      Give your CSS selector the CSS property of grid-template-areas:
        "bookcases"
        "bedroom"
        "patio"
        "couches"
        "desks"
  */
}